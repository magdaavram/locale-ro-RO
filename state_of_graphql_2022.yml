locale: ro-RO
translations:
    ###########################################################################
    # General
    ###########################################################################

    - key: general.results.description
      t: Ediția din 2022 a sondajului anual cu privire la cele mai noi tendințe din ecosistemul GraphQL.

    - key: general.livestream_announcement
      t: Te invităm să iei parte la un [livestream special despre rezultatele sondajului](https://dev.to/sachagreif/state-of-javascript-2021-livestream-24a5) pe 22 februarie! (engleză)

    ###########################################################################
    # Introduction
    ###########################################################################

    - key: sections.introduction.description
      t: >
        
        <span class="first-letter">D</span>e când a fost inițial creat de Facebook în septembrie 2015, mulți programatori au adoptat GraphQL ca o modalitate nouă și promițătoare de a construi API-uri. 
        
        
        Cu toate acestea, 7 ani mai târziu, încă rămân multe întrebări: când mai exact ai nevoie de GraphQL? Ar trebui să îți creezi manual API-ul GraphQL sau să îl generezi din baza de date? Va înlocui vreodată REST?
        
        
        Pentru a răspunde la aceste întrebări și multe altele, am creat primul sondaj **State of GraphQL**. Peste 3.000 de programatori au participat în acest an, iar acesta este doar începutul.
        
        
        Sperăm că îți place să studiezi date. Și nu uita să arunci o privire la [API-ul nostru GraphQL](https://graphiql.devographics.com/)!
        
        
        <span class="conclusion__byline">– Sacha Greif</span>

    ###########################################################################
    # Tshirt
    ###########################################################################

    - key: sections.tshirt.title
      t: Tricou

    - key: sections.tshirt.description
      t: |
        ## Support the Survey With the State of JavaScript T-Shirt
        
        Between the bad video quality, the bulky cassettes, and having to rewind, there's not much to miss about the VHS era. But one thing we *do* miss are the amazing 90s visuals that used to adorn blank VHS tapes. 
        
        But now, thanks to the talented Christopher Kirk-Nielsen you can enjoy all this retro radness while also celebrating your love for JavaScript at the same time!

    - key: tshirt.about
      t: Despre tricou

    - key: tshirt.description
      t: |
        Folosim un tricou dintr-un material înalt calitativ, foarte moale, care are un croi slim fit, imprimat de 
        partenerii noștri de la Cotton Bureau.

    - key: tshirt.getit
      t: Cumpără-l

    - key: tshirt.price
      t: 29$ + transport

    - key: tshirt.designer.heading
      t: Despre designer

    - key: tshirt.designer.name
      t: Christopher Kirk-Nielsen

    - key: tshirt.designer.bio
      t: |
        Originally from France but now based in the United States, Chris is not just an amazing front-end developer, but also a talented illustrator who specializes in retro visuals. In fact, we encourage you to also check out his [other t-shirt designs](https://chriskirknielsen.com/designs)!

    ###########################################################################
    # Sections
    ###########################################################################

    - key: sections.user_info.description
      t: |
        **3.094** de persoane au participat la sondajul din acest an. 

    - key: sections.features.description
      t: |
        GraphQL poate fi un concept simplu la bază, dar sunt multe funcționalități și modele de luat în considerare atunci când intri în detalii. 

    - key: sections.libraries.description
      t: |
        Ecosistemul GraphQL este surprinzător de vast, având multe librării în competiție care îți pot oferi ajutor în configurarea API-ului tău.  

    - key: sections.tools_others.description
      t: |
        Alegerea instrumentelor potrivite pe care să le utilizezi împreună cu GraphQL poate face diferența. 

    - key: sections.usage.description
      t: |
        Am vrut să aflăm nu doar cum este GraphQL folosit, ci și *de ce* este folosit, precum și care sunt aspectele la care GraphQL mai are de lucrat…

    - key: sections.resources.description
      t: |
        Suntem siguri că vei descoperi cel puțin una sau două persoane, podcast-uri sau bloguri pe care vei vrea să le urmărești de acum încolo!

    - key: sections.opinions.description
      t: |
        Whether it's pain points that hold you back today, or missing features that you hope to use
        tomorrow, this was your chance to vent and share your gripes with JavaScript!

    ###########################################################################
    # Charts
    ###########################################################################

    - key: options.features_categories.graphql_language
      aliasFor: sections.graphql_language.title
    - key: options.features_categories.directives
      aliasFor: sections.directives.title
    - key: options.features_categories.security_performance
      aliasFor: sections.security_performance.title
    - key: options.features_categories.other_features
      aliasFor: sections.other_features.title

    - key: blocks.tools_quadrant.description
      t: |
        Acest grafic ilustrează **rata de satisfacție** (sau **rata de interes**) a fiecărei tehnologii în raport cu **numărul total de utilizatori**.
        Poate fi împărțit în patru cadrane:
          - **1**: Utilizare scăzută, rată ridicată de satisfacție. Tehnologii pe care merită să le urmărești.
          - **2**: Utilizare ridicată, rată ridicată de satisfacție. Tehnologii sigure pentru adoptare.
          - **3**: Utilizare scăzută, rată scăzută de satisfacție. Tehnologii care sunt greu de recomandat în acest moment.
          - **4**: Utilizare ridicată, rată scăzută de satisfacție. Dacă încă le folosești, reevaluează aceste tehnologii.

    ###########################################################################
    # Notes
    ###########################################################################

    - key: blocks.gender.note
      t: |
        Dacă ești interesat să afli mai multe, [am scris un articol pe blog](https://dev.to/sachagreif/is-our-survey-biased-against-women-49oj)
        care abordează dinamica de gen a sondajului.

    - key: blocks.currently_missing_from_css.note
      t: |
        Poți explora întregul set de date obținute din răspunsurile la această întrebare în [acest side project](https://whatsmissingfromcss.com/).

    - key: blocks.source.note
      t: >
        
        Acest grafic agregă o combinație de referințe, parametri URL și răspunsuri libere.
        - State of JS: lista abonaților [State of JS](https://stateofjs.com).
        - State of CSS: lista abonaților State of CSS; include și `email`, `după email` etc.
        - Work: include `locul de muncă`, `colegi`, `colegi de muncă` etc.

    ###########################################################################
    # Awards
    ###########################################################################

    - key: award.feature_adoption_delta_award.comment
      t: With a **{value}** progression in 2021, the nullish coalescing operator (??) has quickly become an integral part of JavaScript.

    - key: award.tool_usage_delta_award.comment
      t: esbuild is barely two years old, but with a **{value}** progression over the last year it's already gaining ground.

    - key: award.tool_satisfaction_award.comment
      t: Vite takes the top spot with a sky-high **{value}** satisfaction ratio!

    - key: award.tool_interest_award.comment
      t: With a **{value}** interest ratio, Vite once again wins the gold!

    - key: award.most_write_ins_award.comment
      t: Many questions also accepted write-in answers, and with **{value}** mentions Elm was the most popular item overall.


    ###########################################################################
    # Conclusion
    ###########################################################################

    - key: sections.conclusion.description
      t: |
        
        <span class="first-line">JavaScript is in a tremendously better state today compared to 2016.</span>
        
        Back when the first State of JS survey took place, only 21% of you used TypeScript compared to 69% today. Whereas we used to joke about a new front end framework releasing every day, **React** and **Vue** have now been dominant for 6 years running. And the percentage of people reporting that "JS is moving too fast" is down from 59% to 38%.
        
        This is not to say that the language has stood still. The **Optional Chaining** and **Nullish Coalescing** APIs have rocketed up to be the most used new APIs in our survey, despite only being 2 years old. And more good things are on the way from TC39: you reported that date management is a top missing feature, and the Temporal API recently reached [Stage 3](https://github.com/tc39/proposal-temporal).
        
        The tooling ecosystem is also seeing its own rapid evolution, and it's fair to say that 2021 has been the year of **Vite**. Vite not only debuted at 98% satisfaction, but usage is already at 30% in its first year on our survey, even eclipsing esbuild. Vite isn't alone in trying to improve the state of JavaScript build tools - 8 of the 12 tools we track today are less than two years old! And while **pnpm**, **Turborepo**, and **Nx** took the top spots in our first year tracking monorepo tooling, only 25% report being happy with the state of that category, showing that a lot of work remains to be done. 
        
        Also notable: many new entrants like **Deno**, **Rome**, **Astro**, **Remix**, and more are now supported by venture-backed companies, perhaps charting a viable alternative to the fragile open-source funding environment.
        
        As the [Third Age of JavaScript](https://www.swyx.io/js-third-age/) enters its third year, the opportunities for aspiring open sourcerors and entrepreneurs continue to unfold, and I'm excited to see what the next couple years bring!

    - key: conclusion.bio
      t: Head of DX at Temporal

    ###########################################################################
    # Picks
    ###########################################################################

    - key: picks.my_pick
      t: 'My 2022 Pick: '
    - key: picks.intro
      t: Am rugat membrii comunității GraphQL să ne spună care este „alegerea anului” din perspectiva lor

    - key: picks.jamie_barton.name
      t: GraphQL Mesh
    - key: picks.jamie_barton.bio
      t: Full Stack Developer & Educator
    - key: picks.jamie_barton.description
      t: |
        Din ce în ce mai mulți oameni caută soluții pentru a acoperi decalajul  
        dintre toate serviciile lor. Mesh îți permite să faci asta cu ajutorul 
        serviciilor GraphQL și non-GraphQL.
  

    - key: picks.tanmai_gopal.name
      t: Streaming over GraphQL Subscriptions
    - key: picks.tanmai_gopal.bio
      t: CEO & co-founder at Hasura
    - key: picks.tanmai_gopal.description
      t: |
        API-urile moderne trebuie să gestioneze un volum tot mai mare de date  
        sau cu un flux de date care trebuie procesat rapid. 
        Am putea folosi GraphQL subscriptions ca streaming API?
  

    - key: picks.tim_suchanek.name
      t: Benjie Gillam
    - key: picks.tim_suchanek.bio
      t:  Software Engineer and Entrepreneur
    - key: picks.tim_suchanek.description
      t: |
        Benjie este unul dintre principalii oameni care ajută GraphQL să avanseze. 
        Angajamentul său în WG, TSC și în fondarea câtorva inițiative este de neegalat.

    - key: picks.uri_goldshtein.name
      t: GraphQL Yoga 2.0
    - key: picks.uri_goldshtein.bio
      t: Fondatorul The Guild
    - key: picks.uri_goldshtein.description
      t: |
        Reînvierea GraphQL Yoga 2.0.
        Un server nou, mai performant, cu o paletă largă de plugin-uri
        care rulează pe toate platformele JS (Deno, CF Workers etc.)
    - key: picks.benjie_gillam.name
      t: Podcast-ul SpecNews
    - key: picks.benjie_gillam.bio
      t: Maintainer OSS susținut de comunitate
    - key: picks.benjie_gillam.description
      t: |
        Cele mai recente activități din partea grupului de lucru GraphQL, sumarizate în doar 5-10 minute pe lună. 
        Cunoștințe de vârf GraphQL cu efort minim!

    - key: picks.xxxx.name
      t:
    - key: picks.xxxx.bio
      t:
    - key: picks.xxxx.description
      t: |
      ###########################################################################
    # Sponsors
    ###########################################################################

    - key: partners.frontendmasters.description
      t: Aprofundează-ți cunoștințele urmând cursuri moderne de inginerie front-end.
    - key: partners.polypane.description
      t: Browserul developerilor ambițioși. Creează cu ușurință website-uri responsive, accesibile și rapide.
    - key: partners.google_chrome.description
      t: Mulțumim echipei Google Chrome pentru susținerea muncii noastre.

    ###########################################################################
    # FAQ/About
    ###########################################################################

    - key: about.content
      t: >
        The 2021 State of JS survey ran from January 13 to February 2 **2022**, and collected 16,085 responses. The survey is run by me, [Sacha Greif](https://sachagreif.com/), with help from a team of open-source contributors and consultants. 
        
        This year's logo and t-shirt were designed by [Christopher Kirk-Nielsen](http://chriskirknielsen.com/).
        
        ### Survey Goals
        
        This survey, along with the [State of CSS](https://stateofcss.com/) survey, was created to identify upcoming trends in the web development ecosystem in order to help developers make technological choices. 
        
        As such, these surveys are focused on anticipating what's coming over the next few years rather than analyzing what's popular now, which is why the features or technologies that are currently most widespread are not always included. 
        
        They should also be taken as a **snapshot of a specific subset of developers**, and are not meant to speak for the entire ecosystem. 
        
        ### Survey Design
        
        The survey was designed in part based on last year's survey, with an open feedback period where the survey outline was discussed [on GitHub](https://github.com/StateOfJS/Monorepo/issues/56). 
        
        All survey questions were optional. 
        
        ### Survey Audience
        
        The survey was openly accessible online and respondents were not filtered or selected in any way. Respondents were primarily a mix of respondents from past surveys (alerted through a dedicated mailing list) and social media traffic. 
        
        Note that frameworks, libraries, etc. were free to encourage their audience to participate in the survey and some of them did take advantage of this via banners, tweets, etc. A detailed breakdown of traffic sources is included in the "Sources" chart. 
        
        ### Representativeness & Inclusivity
        
        While we believe it's important to give a voice to every community, the reality is that an open survey like this one will always struggle to properly represent everybody, especially when operating through systems that already carry their own inherent biases. 
        
        
        In order to counter-balance this, we are implementing three distinct strategies:
        
        
        - **Outreach**: we always try to reach out to different organizations (such as BIPOC- or LGBTQ-focused organizations, or online teaching platforms) to try and diversify our own audience. 
        
        - **Data Analysis**: through features like facets and variants, we're always trying to make it easier to surface the voices of any demographic segment, no matter how minoritized it might be in our data. 
        
        - **Barrier Lowering**: making the survey too long, inaccessible, slow to load, English-only, etc. can all contribute to imposing an "effort tax" that cuts off the parts of the community that can't afford to pay it. Fixing these issues can lower the barrier to entry and in the process make our audience more diverse. 
        
        ### Project Funding
        
        Funding from this project comes from a variety of sources:
        
        
        - **T-shirt sales**. 
        
        - **Chart Sponsorships**: members of the community can donate to the survey in exchange for having their name featured in the report.  
        
        - **Sponsored links**: the links to recommended resources at the bottom of each page are provided by our partner [Frontend Masters](https://frontendmasters.com/).
        
        - **Other Funding**: this year, the [Google Chrome](https://www.google.com/chrome/) team set aside a small budget to help hire an [accessibility consultant](https://fossheim.io/) to work on the CSS and JS surveys.
        
        
        Despite these funding sources, the surveys remains mostly a self-funded project overall and any contribution or sponsorship would be greatly appreciated. I would especially like to work closely with more browser vendors, since they play such a central role in the web ecosystem.  
        
        ### Technical Overview
        
        You can find a more in-depth technical overview of how the surveys are run [here](https://dev.to/sachagreif/how-the-state-of-js-css-surveys-are-run-4lnb).
        
        - **Data collection**: custom [Vulcan.js](http://vulcanjs.org/) app.
        
        - **Data storage/processing**: MongoDB & MongoDB Aggregations.
        
        - **Data API**: Node.js GraphQL API. 
        
        - **Results Site**: [Gatsby](https://www.gatsbyjs.com/) React app.
        
        - **Data Visualizations**: [Nivo](https://nivo.rocks/) React dataviz library. 
        
        - **Type**: [IBM Plex Mono](https://fonts.google.com/specimen/IBM+Plex+Mono) and [Bebas Neue](https://fonts.google.com/specimen/Bebas+Neue).